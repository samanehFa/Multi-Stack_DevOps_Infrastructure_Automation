---
- name: Update apt packages
  become: yes
  apt:
    update_cache: yes
    upgrade: yes

#########################################
# Vote container
#########################################
- name: Run vote-app container
  docker_container:
    name: vote-app
    image: vote:v1.0
    state: started
    restart_policy: always
    env:
      REDIS_HOST: ""
      REDIS_PORT: "6379"
    ports:
      - "80:80"
    detach: yes

#########################################
# Results container
######################################### 
- name: Run result-app container
  docker_container:
    name: result-app
    image: result:v1.0
    state: started
    restart_policy: always
    env:
      DB_HOST: ""
      DB_USERNAME: ""
      DB_PASSWORD: ""
      PG_DATABASE: ""
      DB_NAME: ""
    ports:
      - "8080:80"
    detach: yes

# #########################################
# # Testing connection (vote-app -> redis)
# #########################################
# - name: Execute bash shell inside vote-app container
#   command: docker exec -it vote-app bash -c "apt-get update && apt-get install -y redis-tools"

# - name: Ping Redis from vote-app container
#   command: docker exec -it vote-app redis-cli -h 10.0.3.194 -p 6379 ping
#   register: redis_ping_output

# - name: Print Redis ping response
#   debug:
#     var: redis_ping_output.stdout_lines

# #########################################
# # Testing connection (result-app -> postgres)
# #########################################
# - name: Execute bash shell inside result-app container
#   command: docker exec -it result-app bash -c "apt-get update && apt-get install -y postgresql-client"

# - name: Ping PostgreSQL from result-app container
#   command: docker exec -it result-app bash -c "env PGPASSWORD=postgres psql -h 10.0.3.247 -U postgres -d votes"
